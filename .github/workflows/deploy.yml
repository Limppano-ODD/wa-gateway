name: Deploy to EKS

on:
  push:
    branches: [main, master]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: wa-gateway
  EKS_CLUSTER_NAME: cluster-A

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials with OIDC
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}
        role-session-name: GitHubActions-${{ github.run_id }}
        audience: sts.amazonaws.com

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and push it to ECR
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.0'

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER_NAME }}
        kubectl config current-context
        kubectl auth can-i get pods --all-namespaces

    - name: Update Kubernetes deployment image
      env:
        IMAGE_URI: ${{ steps.build-image.outputs.image }}
      run: |
        # Update the deployment YAML with the new image
        sed -i "s|590183660812.dkr.ecr.us-east-1.amazonaws.com/wa-gateway:latest|$IMAGE_URI|g" k8s/deployment.yaml
        
        # Replace placeholders with actual values
        sed -i "s/590183660812/${{ secrets.AWS_ACCOUNT_ID }}/g" k8s/namespace.yaml
        sed -i "s/590183660812/${{ secrets.AWS_ACCOUNT_ID }}/g" k8s/service.yaml
        sed -i "s/91b271ed-1ebb-43bb-b64e-8c973754a885/${{ secrets.AWS_CERTIFICATE_ID }}/g" k8s/service.yaml

    - name: Deploy to EKS
      run: |
        # Apply Kubernetes manifests
        kubectl apply -f k8s/namespace.yaml
        kubectl apply -f k8s/secrets.yaml
        kubectl apply -f k8s/configmap.yaml
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        
        # Wait for deployment to be ready
        kubectl rollout status deployment/wa-gateway -n wa-gateway --timeout=300s

    - name: Verify deployment
      run: |
        kubectl get pods -n wa-gateway
        kubectl get services -n wa-gateway
        kubectl get ingress -n wa-gateway
